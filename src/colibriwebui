#!/bin/bash

########################################################################
#
#  This file is part of colibri-earlyboot.
#  
#  Copyright (C) 2016	Daniel Kesler <kesler.daniel@gmail.com>
#  
#  Foobar is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  Foobar is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

export WEBUI_ITEM_COUNT=0

init_webui()
{
	mkfifo $WEBUI_FIFO &> /dev/null
	mkfifo $WEBUI_BFIFO &> /dev/null
	echo -n "" > $WEBUI_DB
	
	/sbin/httpd -c /etc/httpd.conf
	pidof httpd > "$WEBUI_HTTPD_PID"
}

cleanup_webui()
{
	kill -9 $(cat $WEBUI_HTTPD_PID)
	rm -f $WEBUI_FIFO &> /dev/null
	rm -f $WEBUI_BFIFO &> /dev/null
	rm -f $WEBUI_DB
}

webui_redirect()
{
	PREFIX="redirect"
	URL="$1"
	TIMEOUT="$2"
	URL_AUTO="$3"
	
	ITEM="${URL}|${TIMEOUT}|${URL_AUTO}"
	
	IID=$(awk 'END{print FNR}' $WEBUI_DB)
	#~ if [ "$IID" != "0" ]; then
		#~ let "IID--"
	#~ fi
	echo "$IID@${PREFIX}::${ITEM}" >> $WEBUI_DB
	echo $IID	
}

webui_print()
{
	IID="$2"
	PREFIX="$1"
	shift
	shift
	if [ "$IID" != "-" ]; then
		old_item=$(cat $WEBUI_DB | grep "$IID@" )
		new_item="$IID@$PREFIX::$@"
		sed -i $WEBUI_DB -e "s/$old_item/$new_item/"
		#echo "iid: $IID"
		#echo "$old_item"
		#echo "$new_item"
	else
		IID=$(awk 'END{print FNR}' $WEBUI_DB)
		#~ if [ "$IID" != "0" ]; then
			#~ let "IID--"
		#~ fi
		echo "$IID@$PREFIX::$@" >> $WEBUI_DB
	fi
	echo $IID
}

webui_print_info()
{
	old_id=$1
	shift
	webui_print "info" $old_id $@
}

# @param $1 message
# @param $2 item to overwrite
webui_print_success()
{
	old_id=$1
	shift
	webui_print "success" $old_id $@
}

webui_print_simple()
{
	old_id=$1
	shift
	webui_print "-" $old_id $@
}

webui_print_warning()
{
	old_id=$1
	shift
	webui_print "warning" $old_id $@
}

webui_print_error()
{
	old_id=$1
	shift
	webui_print "error" $old_id $@
}

webui_print_working()
{
	old_id=$1
	shift
	webui_print "working" $old_id $@
}

webui_print_question()
{
	old_id=$1
	shift
	webui_print "question" $old_id $@
}

webui_print_mode()
{
	old_id="-"
	webui_print "mode" $old_id $@
}

webui_print_suggestion()
{
	old_id="-"
	webui_print "suggestion" $old_id $@
}

webui_print_progress()
{
	old_id="-"
	webui_print "progress" $old_id $@ &> /dev/null
}

webui_waitfor_response()
{
	id=$(webui_print "choice" - $@)
	decision="wrong"
	while read decision; do 
		echo "${decision}"; 
		update=$(echo "$@" | sed "s/:$decision/:u/" | sed -r "s/:[0-9]+/:x/g" )
		xx=$(webui_print "decision" $id $update)
		# Unlock webui.cgi
		echo "unlock" > $WEBUI_BFIFO
	done < $WEBUI_FIFO
}
